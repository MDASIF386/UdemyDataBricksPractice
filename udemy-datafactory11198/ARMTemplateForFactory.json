{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "udemy-datafactory11198"
		},
		"AzureDatabricks_ls_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_ls'"
		},
		"adls_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adls_ls'"
		},
		"AzureDatabricks_ls_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0514-100000-xq5q8ym3"
		},
		"adls_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formula1sa989.dfs.core.windows.net/"
		},
		"trigger_pipeline_properties_ingest_pipeline_parameters_p_window_end_date": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/final_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ingest_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_window_end_date": {
									"value": "@pipeline().parameters.p_window_end_date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline1_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "trans_pipeline1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_window_end_date": {
									"value": "@pipeline().parameters.p_window_end_date",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T14:27:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingest_pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/trans_pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingest_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "To check if folder exists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "getmeatadata_ds",
								"type": "DatasetReference",
								"parameters": {
									"p_window_end_date": {
										"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "To check if folder exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('To check if folder exists').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingestion Circuits",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Circuits",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion Constructors Json",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Contructors_Json",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_Qualifying_Multiple_multiline_folder",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Qualifying_Multiple_multiline_folder",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion Laptime folder",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Laptime_folder",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion Results Json",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Results_json",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion Drivers Json",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Drivers_json",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion Races",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_Races",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion pitStops Json",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Ingestion/Ingestion_PitStops_json",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"p_data_source": {
												"value": "@variables('p_data_source')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"p_data_source": {
						"type": "String",
						"defaultValue": "testing"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T14:20:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/getmeatadata_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trans_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "To check if folder exists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "getmeatadata_ds",
								"type": "DatasetReference",
								"parameters": {
									"p_window_end_date": {
										"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "To check if folder exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('To check if folder exists').output.exists, true)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Results_df_Trans_prese",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Transformations/Results_df_Trans_prese",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "calculated_race_results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Formula1/Transformations/calculated_race_results",
										"baseParameters": {
											"p_file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks_ls",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T14:20:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/getmeatadata_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getmeatadata_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_window_end_date",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1856482877370191.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_ls_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks_ls_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_pipeline')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ingest_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"p_window_end_date": "[parameters('trigger_pipeline_properties_ingest_pipeline_parameters_p_window_end_date')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 168,
						"startTime": "2021-03-28T19:14:00",
						"endTime": "2021-04-11T19:14:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingest_pipeline')]"
			]
		}
	]
}